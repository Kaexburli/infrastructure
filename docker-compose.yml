version: "3"

services:

  # TRAEFIK
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/configurations:/configurations
      - ./traefik/logs:/logs
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.___domaine___.com`)"
      - "traefik.http.routers.traefik-secure.middlewares=user-auth@file"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.middlewares=error-pages-middleware"
      #REMOVE_AFTER_INSTALL- "traefik.http.routers.traefik-secure.middlewares=traefikIpwhitelist"
      #REMOVE_AFTER_INSTALL- "traefik.http.middlewares.traefikIpwhitelist.ipwhitelist.sourcerange=___ipwhitelistRange___"

  # NGINX-ERROR - The error pages server
  nginx-error:
    image: nginx:latest
    container_name: nginx-error
    restart: unless-stopped
    volumes:
      - ./nginx-error/error-pages:/usr/share/nginx/error-pages
      - ./nginx-error/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.error-router.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.error-router.priority=1"
      - "traefik.http.routers.error-router.entrypoints=websecure"
      - "traefik.http.routers.error-router.middlewares=error-pages-middleware"
      - "traefik.http.middlewares.error-pages-middleware.errors.status=400-599"
      - "traefik.http.middlewares.error-pages-middleware.errors.query=/{status}.html"
      - "traefik.http.middlewares.error-pages-middleware.errors.service=error-pages-service"
      - "traefik.http.services.error-pages-service.loadbalancer.server.port=80"

  # PORTAINER
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.___domaine___.com`)"
      - "traefik.http.routers.portainer-secure.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      #REMOVE_AFTER_INSTALL- "traefik.http.routers.portainer-secure.middlewares=portainerIpwhitelist"
      #REMOVE_AFTER_INSTALL- "traefik.http.middlewares.portainerIpwhitelist.ipwhitelist.sourcerange=___ipwhitelistRange___"

  # UPTIME-KUMA
  uptime:
    image: "louislam/uptime-kuma:latest"
    container_name: uptime
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    volumes:
      - ./uptimekuma:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.uptime-secure.entrypoints=websecure"
      - "traefik.http.routers.uptime-secure.rule=Host(`uptime.___domaine___.com`)"
      - "traefik.http.routers.uptime-secure.tls.certresolver=le"
      #REMOVE_AFTER_INSTALL- "traefik.http.routers.uptime-secure.middlewares=uptimeIpwhitelist"
      #REMOVE_AFTER_INSTALL- "traefik.http.middlewares.uptimeIpwhitelist.ipwhitelist.sourcerange=___ipwhitelistRange___"

  # VAULT
  vault:
    image: vault:latest
    container_name: vault
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - ./vault/config:/vault/config:rw
      - ./vault/file:/vault/file:rw
      - ./vault/logs:/vault/logs
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
      - ./vault/certs:/vault/certs
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/config.hcl
    env_file: 
      - ./.env
    ports:
      - 8200:8200
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.vault.rule=Host(`vault.___domaine___.com`)"
      - "traefik.http.routers.vault.entrypoints=websecure"
      - "traefik.http.routers.vault.tls=true"
      - "traefik.http.routers.vault.middlewares=vault-mw"
      - "traefik.http.middlewares.vault-mw.compress=true"
      - "traefik.http.middlewares.vault-mw.compress.excludedcontenttypes=text/event-stream"
      - "traefik.http.services.vault.loadbalancer.server.port=8200"
      - "traefik.vault.headers.customResponseHeaders=Access-Control-Allow-Origin:*"
      #REMOVE_AFTER_INSTALL- "traefik.http.routers.vault.middlewares=vaultIpwhitelist"
      #REMOVE_AFTER_INSTALL- "traefik.http.middlewares.vaultIpwhitelist.ipwhitelist.sourcerange=___ipwhitelistRange___"

  # MONGO-DB
  mongodb:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    env_file: 
      - ./.env
    command: [--auth]
    volumes:
      - ./mongodb/database:/data/db
    ports:
      - 27017:27017
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.db-1.entrypoints=websecure
      - traefik.tcp.routers.db-1.service=db-1
      - traefik.tcp.routers.db-1.rule=HostSNI(`db.___domaine___.com`)
      - traefik.tcp.routers.db-1.tls=true
      - traefik.tcp.routers.db-1.tls.certresolver=letsencrypt
      - traefik.tcp.routers.db-1.tls.domains[0].main=___domaine___.com
      - traefik.tcp.services.db-1.loadbalancer.server.port=27017
    networks:
      - proxy
  
  # MONGO-EXPRESS
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    env_file: 
      - ./.env
    volumes:
      - ./mongodb/database:/data/db
    depends_on:
      - mongodb
    networks:
      - proxy
    ports:
      - 8081:8081
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.mongo-express-secure.entrypoints=websecure"
      - "traefik.http.routers.mongo-express-secure.rule=Host(`db.___domaine___.com`)"
      - "traefik.http.routers.mongo-express-secure.service=mongo-express"
      - "traefik.http.services.mongo-express.loadbalancer.server.port=8081"
      #REMOVE_AFTER_INSTALL- "traefik.http.routers.mongo-express-secure.middlewares=mongodbIpwhitelist"
      #REMOVE_AFTER_INSTALL- "traefik.http.middlewares.mongodbIpwhitelist.ipwhitelist.sourcerange=___ipwhitelistRange___"

networks:
  proxy:
    external: true
